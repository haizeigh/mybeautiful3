<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">

  <display-name>Archetype Created Web Application</display-name>

<!--  设置session共享，这个filter要在第一位-->
  <!-- 注意tomcat是否设置了默认的根目录，方便后面nigx调试-->
  <filter>
    <filter-name>springSessionRepositoryFilter</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>springSessionRepositoryFilter</filter-name>
    <url-pattern>/*</url-pattern>
    <!--<dispatcher>REQUEST</dispatcher>-->
    <!--<dispatcher>ERROR</dispatcher>-->
  </filter-mapping>

  <!--<listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>-->
  <!-- shiro 安全过滤器 -->
 <!-- <filter>
    <filter-name>shiroFilter</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    <async-supported>true</async-supported>
    <init-param>
      <param-name>targetFilterLifecycle</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>-->

  <!--<filter-mapping>
    <filter-name>shiroFilter</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
  </filter-mapping>-->

  <!--设置servlet-->
  <servlet>
    <servlet-name>spring_servlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:config/spring-mvc.xml</param-value>
    </init-param>
    <!--<load-on-startup>1</load-on-startup>-->
  </servlet>
  <servlet-mapping>
    <servlet-name>spring_servlet</servlet-name>
<!--    /*比/更容易被选中，而/的真正含义是，缺省匹配。既所有的URL都无法
被选中的时候，就一定会选中/，可见它的优先级是最低的，这就两者的区别
 /* 所有的匹配servlet
  先匹配静态文件等，找不到再匹配-->
    <url-pattern>/</url-pattern>
  </servlet-mapping>


  <!--设置中文解码-->
  <filter>
    <filter-name>characterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>utf-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>characterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!--java melody filter start-->
 <!-- <filter>
    <filter-name>javamelody</filter-name>
    <filter-class>net.bull.javamelody.MonitoringFilter</filter-class>
    &lt;!&ndash;排除对束态文件的监控,js, css , image &ndash;&gt;
    <init-param>
      <param-name>url-exclude-pattern</param-name>
      <param-value>/static/.*</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>javamelody</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <listener>
    <listener-class>net.bull.javamelody.SessionListener</listener-class>
  </listener>-->
  <!--java melody filter end-->

  <!--设置首页-->
<!--  些节点中只能包含HTML、HTM、TEXT文件，不能访问控制器，只能建立空文件然后转跳-->
  <welcome-file-list>
    <welcome-file>inde.jsp</welcome-file>
  </welcome-file-list>


</web-app>
