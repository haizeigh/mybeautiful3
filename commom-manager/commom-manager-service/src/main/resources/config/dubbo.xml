<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--<context:property-placeholder location="classpath:properties/dataSource.properties"/>-->
    <!--<bean id="socialFriendsService" class="com.company.service.serviceimp.SocialFriendsImp"/>-->
    <!-- 提供方应用信息，用于计算依赖关系 -->
    <dubbo:application name="socialFriendsProvider"/>

    <!-- 使用zookeeper注册中心暴露服务地址 即zookeeper的所在服务器ip地址和端口号 -->
    <dubbo:registry check="false" address="zookeeper://127.0.0.1:2181" />
    <!-- 用dubbo协议在20880端口暴露服务 --> <!-- dubbo协议,自动指定未使用的端口 值 -1-->
    <dubbo:protocol name="dubbo" port="-1" />

    <!-- 关闭所有服务的启动时检查：(没有提供者时报错) -->
    <!--    dubbo对于依赖的服务默认采取了启动的时候就做服务可用性检查，若是不可用将会抛出异常-->
    <dubbo:consumer check="false" />

    <!-- 自定义的dubbo生命周期类 -->
    <bean id="dubboLifeCircleAO" class="com.company.service.dubbo.impl.DubboLifeCircleAOImpl"
          init-method="init" destroy-method="destroy"/>


    <dubbo:service interface="com.company.fcade.SocialFriendsInte" ref="socialFriendsService" filter="providerTraceIdFilter"/>
    <dubbo:service interface="com.company.fcade.QuartzJobServiceFcade" ref="quartzJobService" retries="0"/>

</beans>
